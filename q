[1mdiff --git a/com_1/OldAnalToday.py b/com_1/OldAnalToday.py[m
[1mindex aeef117..4e358d0 100644[m
[1m--- a/com_1/OldAnalToday.py[m
[1m+++ b/com_1/OldAnalToday.py[m
[36m@@ -139,7 +139,7 @@[m [mfor ttime in times:[m
 [m
                 c = exportData[:i+1, 3].astype(float)[m
 [m
[31m-                if(code.decode('utf-8') == '018000'): #testst[m
[32m+[m[32m                if(code.decode('utf-8') == '138490'): #testst[m
                     thGr = int(exportData[i-3, 4].decode('UTF-8')) - int(exportData[i-6, 4].decode('UTF-8'))                  [m
                     nowGr = int(exportData[i, 4].decode('UTF-8')) - int(exportData[i-3, 4].decode('UTF-8'))[m
                     if(thGr != 0 and nowGr != 0):[m
[36m@@ -340,6 +340,18 @@[m [mfor ttime in times:[m
 [m
                 if(code.decode('utf-8') in delayMesu and delayMesu[code.decode('utf-8')] + 1 < i and delayMesu[code.decode('utf-8')] + 6 > i and grRate < 0.89 and (int(exportData[i, 4].decode('UTF-8')) - int(exportData[i-1, 4].decode('UTF-8'))) > 1000 and (int(exportData[i-3, 4].decode('UTF-8')) - int(exportData[i-6, 4].decode('UTF-8'))) > 1000 and code not in comps and gr1 and chegang < 400):[m
 [m
[32m+[m[32m                    fcgfit1 = sp.polyfit(sp.array(range(4)), exportData[i-3:i+1,9].astype(float), 1)[m
[32m+[m[32m                    fcggrad1 = sp.around(fcgfit1[0], decimals=2)[m
[32m+[m[41m        [m
[32m+[m[32m                    fcgfit2 = sp.polyfit(sp.array(range(5)), exportData[i-4:i+1,9].astype(float), 1)[m
[32m+[m[32m                    fcggrad2 = sp.around(fcgfit2[0], decimals=2)[m[41m                            [m
[32m+[m[41m         [m
[32m+[m[32m                    fcggrad = min([fcggrad1, fcggrad2])[m
[32m+[m
[32m+[m[32m                    if(fcggrad < -19.5 and xstime.tm_min < 10 and chegang > 195):[m
[32m+[m[32m                        del delayMesu[code.decode('utf-8')][m
[32m+[m[32m                        continue;[m
[32m+[m
                     comps.append((code))[m
                     mesuStart[code.decode('utf-8')] = i[m
                     msGradient[code.decode('utf-8')] = 0[m
[36m@@ -398,7 +410,7 @@[m [mfor ttime in times:[m
                                 continue;[m
 [m
                             cost = int(exportData[i, 8].decode('UTF-8'))[m
[31m-                            if(cost > 8500):[m
[32m+[m[32m                            if(cost > 9000):[m
                                 print(ttime, code, 'nos909090')[m
                                 nos.append(code)[m
                                 continue;[m
[36m@@ -473,11 +485,6 @@[m [mfor ttime in times:[m
                                 nos.append(code)[m
                                 continue;[m
 [m
[31m-                            if(fcggrad < -14.01):[m
[31m-                                print(ttime, code, 'nos77777')[m
[31m-                                nos.append(code)[m
[31m-                                continue;[m
[31m-[m
                             tpg = 0[m
                             msi = 0[m
                             for ii in range(1,i):[m
[36m@@ -561,6 +568,11 @@[m [mfor ttime in times:[m
                                 delayMesu[code.decode('utf-8')] = i[m
                                 continue;[m
 [m
[32m+[m[32m                            if(fcggrad < -19.5 and xstime.tm_min < 10 and chegang > 195):[m
[32m+[m[32m                                # nosDic[code.decode('utf-8')].append('9')[m
[32m+[m[32m                                nos.append(code)[m
[32m+[m[32m                                continue;[m
[32m+[m
                             comps.append((code))[m
                             mesuStart[code.decode('utf-8')] = i[m
                             msGradient[code.decode('utf-8')] = gradient[m
